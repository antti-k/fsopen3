{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/SuccessNotification.js","components/ErrorNotification.js","App.js","serviceWorker.js","index.js"],"names":["Filter","_ref","newFilter","handleFilterChange","react_default","a","createElement","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Persons","persons","deletePerson","filter","person","name","toLowerCase","includes","map","key","number","onClick","baseUrl","services_persons","axios","get","then","response","data","newObject","post","id","delete","concat","put","SuccessNotification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","ErrorNotification","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setNewFilter","_useState9","_useState10","successMessage","setSuccessMessage","_useState11","_useState12","errorMessage","setErrorMessage","useEffect","personService","initialPersons","notify","setTimeout","errorNotify","components_SuccessNotification","components_ErrorNotification","components_Filter","event","target","components_PersonForm","preventDefault","some","window","confirm","personObject","currentPerson","find","console","log","returnedPerson","toConsumableArray","catch","error","components_Persons","personToDelete","_","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e4d8fea.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ newFilter, handleFilterChange }) => (\n\t<div>\n\t\tfilter shown with\n\t\t<input \n\t\t\tvalue={newFilter}\n\t\t\tonChange={handleFilterChange}\n\t\t/>\n\t</div>\n)\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = ({ addPerson, newName, handleNameChange, newNumber, handleNumberChange }) => (\n\t<form onSubmit={addPerson}>\n\t\t<div>\n\t\t\tname: \n\t\t\t<input\n\t\t\t\tvalue={newName}\n\t\t\t\tonChange={handleNameChange}\n\t\t\t/>\n\t\t</div>\n\t\t<div>\n\t\t\tnumber: \n\t\t\t<input\n\t\t\t\tvalue={newNumber}\n\t\t\t\tonChange={handleNumberChange}\n\t\t\t/>\n\t\t</div>\n\t\t<div>\n\t\t\t<button type=\"submit\">add</button>\n\t\t</div>\n\t</form>\n)\n\nexport default PersonForm\n","import React from 'react'\n\nconst Persons = ({ persons, newFilter, deletePerson}) => {\n\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\tpersons\n\t\t\t\t\t.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\t\t\t\t\t.map(person => <p key={person.name}>{person.name} {person.number}<button onClick={deletePerson(person)}>delete</button></p>)\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default Persons\n","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n\tconst request = axios.get(baseUrl)\n\treturn request.then(response => response.data)\n}\n\nconst add = (newObject) => {\n\tconst request = axios.post(baseUrl, newObject)\n\treturn request.then(response => response.data)\n}\n\nconst remove = (id) => {\n\tconst request = axios.delete(`${baseUrl}/${id}`)\n\treturn request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject)\n\treturn request.then(response => response.data)\n}\n\nexport default { getAll, add, remove, update }\n","import React from 'react'\n\nconst SuccessNotification = ({ message }) => {\n\tconst style = {\n\t\tcolor: 'green',\n\t\tbackground: 'lightgrey',\n\t\tfontSize: '20px',\n\t\tborderStyle: 'solid',\n\t\tborderRadius: '5px',\n\t\tpadding: '10px',\n\t\tmarginBottom: '20px'\n\t}\n\n\tif (message === null) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div style={style}>\n\t\t\t{message}\n\t\t</div>\n\t)\n}\n\nexport default SuccessNotification\n","import React from 'react'\n\nconst ErrorNotification  = ({ message }) => {\n\tconst style = {\n\t\tcolor: 'red',\n\t\tbackground: 'lightgrey',\n\t\tfontSize: '20px',\n\t\tborderStyle: 'solid',\n\t\tborderRadius: '5px',\n\t\tpadding: '10px',\n\t\tmarginBottom: '20px'\n\t}\n\n\tif (message === null) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div style={style}>\n\t\t\t{message}\n\t\t</div>\n\t)\n}\n\nexport default ErrorNotification\n","import React, { useState, useEffect } from 'react'\n\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport SuccessNotification from './components/SuccessNotification'\nimport ErrorNotification from './components/ErrorNotification'\n\nconst App = () => {\n\tconst [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n\tconst [ newNumber, setNewNumber ] = useState('')\n\tconst [ newFilter, setNewFilter ] = useState('')\n\tconst [ successMessage, setSuccessMessage ] = useState(null)\n\tconst [ errorMessage, setErrorMessage ] = useState(null)\n\n\tuseEffect(() => {\n\t\tpersonService\n\t\t\t.getAll()\n\t\t\t.then(initialPersons => {\n\t\t\t\tsetPersons(initialPersons)\n\t\t\t})\n\t}, [])\n\n\tconst notify = (message) => {\n\t\tsetSuccessMessage(message)\n\t\tsetTimeout(() => {\n\t\t\tsetSuccessMessage(null)\n\t\t}, 3000)\n\t}\n\n\tconst errorNotify = (message) => {\n\t\tsetErrorMessage(message)\n\t\tsetTimeout(() => {\n\t\t\tsetErrorMessage(null)\n\t\t}, 5000)\n\t}\n\n\tconst addPerson = (event) => {\n\t\tevent.preventDefault()\n\t\tif (persons.some(person => person.name === newName)) {\n\t\t\tif (window.confirm(`${newName} is already added to phonebook, replace the old number with a new on?`)) {\n\t\t\t\tconst personObject = {\n\t\t\t\t\tname: newName,\n\t\t\t\t\tnumber: newNumber\n\t\t\t\t}\n\t\t\t\tconst currentPerson = persons.find(person => person.name === newName)\n\t\t\t\tconsole.log({personObject})\n\t\t\t\tconsole.log({currentPerson})\n\t\t\t\tconst { id } = currentPerson\n\t\t\t\tpersonService\n\t\t\t\t\t.update(id, personObject)\n\t\t\t\t\t.then(returnedPerson => {\n\t\t\t\t\t\tsetPersons([...persons.filter(person => person.id !== id), returnedPerson])\n\t\t\t\t\t\tsetNewName('')\n\t\t\t\t\t\tsetNewNumber('')\n\t\t\t\t\t\tnotify(`Updated number of ${newName}`)\n\t\t\t\t\t})\n\t\t\t\t.catch(error => errorNotify(`Information of ${currentPerson.name} has already been removed from server`))\n\t\t\t}\n\t\t} else {\n\t\t\tconst personObject = {\n\t\t\t\tname: newName,\n\t\t\t\tnumber: newNumber\n\t\t\t}\n\t\t\tpersonService\n\t\t\t\t.add(personObject)\n\t\t\t\t.then(returnedPerson => {\n\t\t\t\t\tsetPersons([...persons, returnedPerson])\n\t\t\t\t\tsetNewName('')\n\t\t\t\t\tsetNewNumber('')\n\t\t\t\t\tnotify(`Added ${newName}`)\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\terrorNotify(error.response.data.error)\n\t\t\t\t})\n\t\t}\n\t}\n\n\tconst deletePerson = (personToDelete) => () => {\n\t\tif (window.confirm(`Delete ${personToDelete.name}?`)) {\n\t\t\tpersonService\n\t\t\t\t.remove(personToDelete.id)\n\t\t\t\t.then(_ => {\n\t\t\t\t\tsetPersons(persons.filter(person => person.id !== personToDelete.id))\n\t\t\t\t\tnotify(`Deleted ${personToDelete.name}`)\n\t\t\t\t})\n\t\t}\n\t}\n\n\tconst handleNumberChange = (event) => {\n\t\tsetNewNumber(event.target.value)\n\t}\n\n\tconst handleNameChange = (event) => {\n\t\tsetNewName(event.target.value)\n\t}\n\n\tconst handleFilterChange = (event) => {\n\t\tsetNewFilter(event.target.value)\n\t}\n\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n\t\t\t<SuccessNotification message={successMessage} />\n\t\t\t<ErrorNotification message={errorMessage} />\n\n\t\t\t<Filter newFilter={newFilter} handleFilterChange={handleFilterChange} />\n\n\t\t\t<h3>Add a new</h3>\n\n\t\t\t<PersonForm\n\t\t\t\taddPerson={addPerson}\n\t\t\t\tnewName={newName}\n\t\t\t\thandleNameChange={handleNameChange}\n\t\t\t\tnewNumber={newNumber}\n\t\t\t\thandleNumberChange={handleNumberChange}\n\t\t\t/>\n\n      <h3>Numbers</h3>\n\n\t\t\t<Persons\n\t\t\t\tpersons={persons}\n\t\t\t\tnewFilter={newFilter}\n\t\t\t\tdeletePerson={deletePerson}\n\t\t\t/>\n    </div>\n  )\n\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}